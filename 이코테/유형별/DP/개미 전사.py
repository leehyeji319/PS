# 얻을 수 있는 식량의 최댓값
# ai = i 번째 식량 창고까지의 최적의 해 (얻을 수 있는 식량의 최댓값)
# 왼쪽부터 차례대로 식량창고를 턴다고 했을 때, 특정한 i번째 식량창고에 대해서 털지 안 털지의 여부를 결정하면
# 아래 2가지 경우 중에서 더 많은 식량을 털 수 있는 경우를 선택하면 됩니다. i-1 이 더 큰지, i-2가 더 큰지 이 두가지만 고려해
# ai = max(ai-1, ai-2 + ki) 한칸 이상 떨어진 식량창고는 항상 털 수 있으므로 i - 3 번째 이하는 고려할 필요가 없다 
N = int(input())
#식량 정보 입력받기
array = list(map(int, input().split()))

d = [0] * 100

#dp bottom up 
d[0] = array[0]
d[1] = max(array[0], array[1])
for i in range(2, N):
    d[i] = max(d[i - 1], d[i - 2] + array[i])

# 계산된 결과 확인
print(d[N - 1])